public class SelectionView {

    @FXML
    private Button startButton;

    @FXML
    private ComboBox age1;

    @FXML
    private ComboBox age2;

    @FXML
    private ComboBox age3;

    @FXML
    private ComboBox age4;

    @FXML
    private ComboBox age5;

    @FXML
    private TextField name1;

    @FXML
    private TextField name2;

    @FXML
    private TextField name3;

    @FXML
    private TextField name4;

    @FXML
    private TextField name5;

    @FXML
    private ComboBox comboBox;

    @FXML
    private Button boutonMenu;

    int players = 0;

    int i = 1;

    @FXML
    protected void mainMenu() throws IOException {
        Stage stage = (Stage) boutonMenu.getScene().getWindow();
        Scene scene = new Scene(FXMLLoader.load(getClass().getResource("menu-view.fxml")));
        stage.setScene(scene);
        stage.setFullScreen(true);
    }

    public SelectionView() throws IOException {
    }

    public void nextScene() throws IOException {
        Stage stage = (Stage) startButton.getScene().getWindow();
        Scene scene = new Scene(FXMLLoader.load(getClass().getResource("game-view.fxml")));
        stage.setScene(scene);
        stage.setFullScreen(true);
    }

    @FXML
    protected void choiceBoxClick(){
        comboBox.getItems().clear();
        comboBox.getItems().addAll("1", "2", "3", "4", "5");

    }

    @FXML
    protected void setType1(){
        age1.getItems().clear();
        for (int i = 7; i <= 77; i++) {
            age1.getItems().add(i);
        }
    }

    @FXML
    protected void setType2(){
        age2.getItems().clear();
        for (int i = 7; i <= 77; i++) {
            age2.getItems().add(i);
        }
    }

    @FXML
    protected void setType3(){
        age3.getItems().clear();
        for (int i = 7; i <= 77; i++) {
            age3.getItems().add(i);
        }
    }

    @FXML
    protected void setType4(){
        age4.getItems().clear();
        for (int i = 7; i <= 77; i++) {
            age4.getItems().add(i);
        }
    }

    @FXML
    protected void setType5(){
        age5.getItems().clear();
        for (int i = 7; i <= 77; i++) {
            age5.getItems().add(i);
        }
    }

    @FXML
    protected void choiceBoxChoosed(){
        players = comboBox.getSelectionModel().getSelectedIndex();

        switch (players){

            case 0:
                age1.setVisible(true);
                age2.setVisible(false);
                age3.setVisible(false);
                age4.setVisible(false);
                age5.setVisible(false);

                name1.setVisible(true);
                name2.setVisible(false);
                name3.setVisible(false);
                name4.setVisible(false);
                name5.setVisible(false);

                startButton.setVisible(true);

                break;
            case 1:
                age1.setVisible(true);
                age2.setVisible(true);
                age3.setVisible(false);
                age4.setVisible(false);
                age5.setVisible(false);

                name1.setVisible(true);
                name2.setVisible(true);
                name3.setVisible(false);
                name4.setVisible(false);
                name5.setVisible(false);

                startButton.setVisible(true);

                break;
            case 2:
                age1.setVisible(true);
                age2.setVisible(true);
                age3.setVisible(true);
                age4.setVisible(false);
                age5.setVisible(false);

                name1.setVisible(true);
                name2.setVisible(true);
                name3.setVisible(true);
                name4.setVisible(false);
                name5.setVisible(false);

                startButton.setVisible(true);

                break;
            case 3:
                age1.setVisible(true);
                age2.setVisible(true);
                age3.setVisible(true);
                age4.setVisible(true);
                age5.setVisible(false);

                name1.setVisible(true);
                name2.setVisible(true);
                name3.setVisible(true);
                name4.setVisible(true);
                name5.setVisible(false);

                startButton.setVisible(true);

                break;
            case 4:
                age1.setVisible(true);
                age2.setVisible(true);
                age3.setVisible(true);
                age4.setVisible(true);
                age5.setVisible(true);

                name1.setVisible(true);
                name2.setVisible(true);
                name3.setVisible(true);
                name4.setVisible(true);
                name5.setVisible(true);

                startButton.setVisible(true);

                break;
        }
    }

    @FXML
    protected void startButtonClicked() throws Exception {

        players = comboBox.getSelectionModel().getSelectedIndex();

        if (players == 0) {
            System.out.println("You must have a friend to play this game!");
        }

        else if (players == 1) {
            int playerAge = (int) age1.getValue();
            String playerName = name1.getText();
            int playerNumber = i;
            Player player1 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age2.getValue();
            playerName = name2.getText();
            playerNumber = i;
            Player player2 = new Player(playerName, playerAge, playerNumber, true);

            nextScene();
        }

        else if (players == 2) {
            int playerAge = (int) age1.getValue();
            String playerName = name1.getText();
            int playerNumber = i;
            Player player1 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age2.getValue();
            playerName = name2.getText();
            playerNumber = i;
            Player player2 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age3.getValue();
            playerName = name3.getText();
            playerNumber = i;
            Player player3 = new Player(playerName, playerAge, playerNumber, true);

            nextScene();
        }

        else if (players == 3) {
            int playerAge = (int) age1.getValue();
            String playerName = name1.getText();
            int playerNumber = i;
            Player player1 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age2.getValue();
            playerName = name2.getText();
            playerNumber = i;
            Player player2 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age3.getValue();
            playerName = name3.getText();
            playerNumber = i;
            Player player3 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age4.getValue();
            playerName = name4.getText();
            playerNumber = i;
            Player player4 = new Player(playerName, playerAge, playerNumber, true);

            nextScene();
        }

        else if (players == 4) {
            int playerAge = (int) age1.getValue();
            String playerName = name1.getText();
            int playerNumber = i;
            Player player1 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age2.getValue();
            playerName = name2.getText();
            playerNumber = i;
            Player player2 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age3.getValue();
            playerName = name3.getText();
            playerNumber = i;
            Player player3 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age4.getValue();
            playerName = name4.getText();
            playerNumber = i;
            Player player4 = new Player(playerName, playerAge, playerNumber, true);
            i++;

            playerAge = (int) age5.getValue();
            playerName = name5.getText();
            playerNumber = i;
            Player player5 = new Player(playerName, playerAge, playerNumber, true);

            nextScene();
        }

        else {
            System.out.println("Veuillez sélectionner le nombre de joueurs à créer");
        }
    }
}

<?xml version="1.0" encoding="UTF-8"?>

<?import javafx.scene.control.Button?>
<?import javafx.scene.image.Image?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.AnchorPane?>
<?import javafx.scene.layout.ColumnConstraints?>
<?import javafx.scene.layout.GridPane?>
<?import javafx.scene.layout.RowConstraints?>
<?import javafx.scene.text.Font?>

<?import javafx.scene.control.Label?>
<?import javafx.scene.control.Tooltip?>
<?import javafx.scene.control.ComboBox?>
<?import javafx.scene.control.TextField?>
<?import java.lang.Integer?>
<GridPane maxHeight="-Infinity" maxWidth="-Infinity" prefHeight="1920" prefWidth="1080" stylesheets="@font.css" xmlns="http://javafx.com/javafx/19" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.sevenwonders.SelectionView">
    <columnConstraints>
        <ColumnConstraints halignment="center" hgrow="SOMETIMES" minWidth="10.0" prefWidth="100.0"/>
    </columnConstraints>
    <rowConstraints>
        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES"/>
    </rowConstraints>
    <Label text="Number of players:" GridPane.rowIndex="0"/>
    <ComboBox fx:id="playerNumber" GridPane.columnIndex="1">
        <items>
            <Integer fx:value="2"/>
            <Integer fx:value="3"/>
            <Integer fx:value="4"/>
            <Integer fx:value="5"/>
            <Integer fx:value="6"/>
            <Integer fx:value="7"/>
        </items>
    </ComboBox>
    <Label text="Player Name:" GridPane.rowIndex="1"/>
    <TextField fx:id="playerName" GridPane.columnIndex="1" GridPane.rowIndex="1"/>
    <Label text="Player Age:" GridPane.rowIndex="2"/>
    <TextField fx:id="playerAge" GridPane.columnIndex="1" GridPane.rowIndex="2"/>
    <Label text="Wonder:" GridPane.rowIndex="3"/>
    <ComboBox fx:id="wonderChoice" GridPane.columnIndex="1" GridPane.rowIndex="3">
        <items>
            <Label text="Alexandrie" graphic="@../../../Assets/images/wonders/alexandrie/alexandrieFull.png">
                <tooltip>
                    <Tooltip text="Alexandria: The ancient lighthouse is one of the Seven Wonders of the World."/>
                </tooltip>
            </Label>
            <Label text="Halicarnasse" graphic="@../../../Assets/images/wonders/halicarnasse/halicarnasseFull.png">
                <tooltip>
                    <Tooltip text="Halicarnassus: The ancient tomb is one of theSeven Wonders of the World."/>
                </tooltip>
            </Label>
            <Label text="Ephese" graphic="@../../../Assets/images/wonders/ephese/epheseFull.png">
                <tooltip>
                    <Tooltip text="Ephesus: The ancient temple is one of the Seven Wonders of the World."/>
                </tooltip>
            </Label>
            <Label text="Olympie" graphic="@../../../Assets/images/wonders/olympie/olympieFull.png">
                <tooltip>
                    <Tooltip text="Olympia: The ancient stadium is one of the Seven Wonders of the World."/>
                </tooltip>
            </Label>
            <Label text="Babylone" graphic="@../../../Assets/images/wonders/babylon/babylonFull.png">
                <tooltip>
                    <Tooltip text="Babylon: The ancient tower is one of the Seven Wonders of the World."/>
                </tooltip>
            </Label>
            <Label text="Rhodes" graphic="@../../../Assets/images/wonders/rhodes/rhodesFull.png">
                <tooltip>
                    <Tooltip text="Rhodes: The ancient statue is one of the Seven Wonders of the World."/>
                </tooltip>
            </Label>
            <Label text="Gizeh" graphic="@../../../Assets/images/wonders/giseh/gizehFull.png">
                <tooltip>
                    <Tooltip text="Gizeh: The ancient pyramid isone of the Seven Wonders of the World."/>
                </tooltip>
            </Label>
        </items>
    </ComboBox>
    <Button text="Validate" GridPane.rowIndex="4" onAction="#createPlayers"/>
</GridPane>



public class SelectionView {

    @FXML private ComboBox<Integer> playerNumber;
    @FXML private TextField playerName;
    @FXML private TextField playerAge;
    @FXML private ComboBox<Wonder> wonderChoice;
    private Wonder selectedWonder;
    private Player[] players;

    @FXML
    private void initialize() {
        playerNumber.getItems().addAll(2,3,4,5,6,7);
        wonderChoice.getItems().addAll(Wonder.Alexandrie, Wonder.Babylone, Wonder.Ephese, Wonder.Gizeh, Wonder.Halicarnasse, Wonder.Olympie, Wonder.Rhodes);
    }

    @FXML
    private void define() {
        wonderChoice.setOnAction(event -> {
            Wonder selectedItem = wonderChoice.getSelectionModel().getSelectedItem();
            selectedWonder = selectedItem;
        });
    }

    @FXML
    private void createPlayers() {
        int nbPlayers = playerNumber.getValue();
        players = new Player[nbPlayers];
        players[0] = new Player(playerName.getText(), Integer.parseInt(playerAge.getText()), selectedWonder);
        // Similar lines for other players
        // Start the game with the selected players
    }
}
